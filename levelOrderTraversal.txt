#include<iostream>
#include<queue>
using namespace std;

class node{
public:
//create node
    int data;
    node* left;
    node* right;
//node initialization
 node(int d){
   this->data=d;
   this->left=NULL;
   this->right=NULL;
 }

};

node* buildtree(node* root)
{
   cout<<"Enter the data: " <<endl;
   int data;
   cin>> data;
   root = new node(data);

   if(data==-1)
   {
      return NULL;
   }

   cout<<"Enter data for inserting in left"<<" ";
   root->left=buildtree(root->left);
   cout<<"Enter data for inserting in right"<<" ";
   root->right=buildtree(root->right);

}

void levelOrderTraversal(node* root)
{
   queue<node*> q;
   q.push(root);
   while (!q.empty())
   {
      /* code */
      node * temp = q.front();
      cout<< temp->data<< " ";
      q.pop();

      if(temp->left)
      {
         q.push(temp->left);
        
      }

      if(temp->right)
      {
         q.push(temp->right);
      }
   }
   
}
int main(){
   //initially root is null
   node* root=NULL;

   //creating tree
   root=buildtree(root);
   levelOrderTraversal(root);

  return 0;
}
